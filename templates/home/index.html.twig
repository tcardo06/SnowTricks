{% extends 'base.html.twig' %}

{% block title %}SnowTricks - Accueil{% endblock %}

{% block body %}
<h1 class="text-center my-4">Bienvenue sur SnowTricks !</h1>

{% if is_granted('IS_AUTHENTICATED_FULLY') %}
    <div class="text-center mb-4">
        <a href="{{ path('trick_create') }}" class="btn btn-success">Créer une figure</a>
    </div>
{% endif %}

<div id="tricks-container" class="row row-cols-1 row-cols-md-3 g-4">
    {% for trick in tricks %}
        <div class="col">
            <div class="card position-relative h-100">
                <!-- Display first trick image if available, otherwise use placeholder -->
                <img src="{% if trick.illustrations|length > 0 %}
                            data:image/jpeg;base64,{{ trick.illustrations|first.getBase64Image() }}
                         {% else %}
                            {{ asset('images/placeholder.jpg') }}
                         {% endif %}" 
                     class="card-img-top" 
                     alt="{{ trick.name }}">

                <!-- Edit & Delete Buttons (Only for the trick's creator) -->
                {% if is_granted('IS_AUTHENTICATED_FULLY') and trick.creator == app.user %}
                    <div class="position-absolute top-0 end-0 p-2 d-flex">
                        <a href="{{ path('trick_edit', { slug: trick.slug }) }}" class="btn btn-sm btn-warning me-1">✏️</a>
                        <button type="button" class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#deleteTrickModal{{ trick.id }}">
                            ❌
                        </button>
                    </div>
                {% endif %}

                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">
                        <a href="{{ path('trick_details', { slug: trick.slug }) }}">{{ trick.name }}</a>
                    </h5>
                    <p class="card-text flex-grow-1">
                        {{ trick.description|slice(0, 150) ~ (trick.description|length > 150 ? '...' : '') }}
                    </p>
                </div>
            </div>
        </div>

        <!-- Delete Confirmation Modal (only for the trick's creator) -->
        {% if is_granted('IS_AUTHENTICATED_FULLY') and trick.creator == app.user %}
            <div class="modal fade" id="deleteTrickModal{{ trick.id }}" tabindex="-1" aria-labelledby="deleteTrickModalLabel{{ trick.id }}" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="deleteTrickModalLabel{{ trick.id }}">Confirmer la suppression</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Êtes-vous sûr de vouloir supprimer la figure "<strong>{{ trick.name }}</strong>" ? Cette action est irréversible.
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                            <a href="{{ path('trick_delete', { slug: trick.slug }) }}" class="btn btn-danger">Supprimer</a>
                        </div>
                    </div>
                </div>
            </div>
        {% endif %}
    {% endfor %}
</div>

<div class="text-center mt-4 mb-5">
    <button id="load-more" class="btn btn-primary" data-offset="15">Charger plus</button>
</div>

<script>
document.getElementById('load-more').addEventListener('click', function () {
    const button = this;
    const offset = button.getAttribute('data-offset');

    fetch(`/load-more-tricks/${offset}`)
        .then(response => response.json())
        .then(data => {
            const container = document.getElementById('tricks-container');
            container.insertAdjacentHTML('beforeend', data.html);
            button.setAttribute('data-offset', parseInt(offset) + 15);
            if (!data.hasMore) {
                button.style.display = 'none';
            }
        })
        .catch(error => console.error('Erreur lors du chargement de nouvelles figures:', error));
});
</script>

<style>
/* Small Edit & Delete Buttons on Cards */
.card .position-absolute {
    top: 5px;
    right: 5px;
}
.card .btn-sm {
    width: 30px;
    height: 30px;
    font-size: 0.8rem;
    padding: 2px;
    line-height: 1;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Ensure all card bodies have a uniform height */
.card-body {
    min-height: 200px;
}
/* Force the description to truncate after a certain height */
.card-body .card-text {
    overflow: hidden;
    text-overflow: ellipsis;
}
</style>

{% endblock %}
